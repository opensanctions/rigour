import black
import orjson
import logging
import unicodedata
from pathlib import Path
from typing import Any, Iterable
from normality.cleaning import remove_unsafe_chars


REPO_ROOT = Path(__file__).parent.parent
RESOURCES_PATH = REPO_ROOT / "resources"
CODE_PATH = REPO_ROOT / "rigour" / "data"

logging.basicConfig(level=logging.INFO)


def norm_string(data: Any) -> str:
    """Normalize a string to avoid duplication and provide standardized forms."""
    text = str(data)
    text = unicodedata.normalize("NFC", text)
    text = remove_unsafe_chars(text)
    return text.strip()


def write_python(file_path: Path, content: str) -> None:
    mode = black.Mode()
    formatted_code = black.format_str(content, mode=mode)

    # Write the formatted code to a file
    with open(file_path, "w", encoding="utf-8") as fh:
        fh.write("# This file is automatically generated, do not edit it.\n")
        fh.write(formatted_code)


def write_jsonl(file_path: Path, data: Iterable[Any]) -> None:
    """Write a list of dictionaries to a JSONL file."""
    with open(file_path, "wb") as fh:
        for item in data:
            fh.write(orjson.dumps(item, option=orjson.OPT_APPEND_NEWLINE))
